{"version":3,"sources":["js/task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","resolve","reject","delay","time","id","setTimeout","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";;;AA+CA,aA/CA,QAAA,qBAEA,IAAMA,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GAEhB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAErBC,IAAAA,EAAQX,EAA0B,IAAK,KACvCY,EAAOD,EACPE,EAAKN,EAAYM,GAEvBC,WAAW,WAEUX,KAAKE,SAAW,GAGjCI,EAAQ,CAAEI,GAAAA,EAAID,KAAAA,IAEdF,EAAOG,IAERF,MAIDI,EAAa,SAAkB,GAAfF,IAAAA,EAAAA,EAAAA,GAAID,EAAAA,EAAAA,KACxBI,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBD,kBAAAA,OAAAA,EAA9C,QAGIM,EAAW,SAAAL,GACfG,QAAQG,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAGFP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task-3.fdd44871.js","sourceRoot":"../src","sourcesContent":["import '../css/styles.css';\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n\n  return new Promise((resolve, reject) => {\n    \n    const delay = randomIntegerFromInterval(200, 500);\n    const time = delay;\n    const id = transaction.id;\n    \n    setTimeout(() => {      \n      \n      const canProcess = Math.random() > 0.3;\n      \n      if (canProcess) {\n        resolve({ id, time });\n      } else {\n        reject(id);\n      }\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);\n"]}